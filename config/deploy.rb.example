require 'bundler/capistrano'        # Handles gems
require 'rvm/capistrano'

set :rvm_ruby_string, '1.9.3'
set :rvm_type, :system

set :scm, :git
set :application, "ligercat"
set :repository,  "https://github.com/mbl-cli/LigerCat.git"

ssh_options[:username] = 'meow'
set :use_sudo, false

set :deploy_via, :remote_cache
set :deploy_to, "/var/www/#{application}"

set :unicorn_bin, "unicorn_rails"
require 'capistrano-unicorn'

# whenever
set :whenever_command, "bundle exec whenever"
set :whenever_roles, ["app"]
require 'whenever/capistrano'

#precompile assets on web servers

namespace :assets do
  desc "Precompile assets"
  task :precompile, :roles => [:web] do
    run "cd #{release_path};bundle exec rake assets:precompile"
  end
end

namespace :blast_binary do
  desc "Make symlink to the correct blast binary"
  task :symlink do
    run "ln -nfs #{release_path}/lib/blast_bin/blastn-linux #{release_path}/lib/blast_bin/blastn"
    run "ln -nfs #{release_path}/lib/blast_bin/tblastn-linux #{release_path}/lib/blast_bin/tblastn"
  end
end

namespace :eol_list do
  desc "Make symlink to the list of EoL species"
  task :symlink, :roles => :app do
    run "ln -nfs #{shared_path}/public/eol_ids_with_clouds.txt.gz #{release_path}/public/eol_ids_with_clouds.txt.gz"
  end
end

namespace :database_yml do
  desc "Make symlink for database.yml"
  task :symlink do
    run "ln -nfs #{shared_path}/config/database.yml #{release_path}/config/database.yml"
  end
end

namespace :eol_cache do
  desc "Make symlink for eol cache directory"
  task :symlink do
    run "ln -nfs #{shared_path}/cache/eol #{release_path}/public/eol"
  end
end

namespace :unicorn do
  desc "Symlink unicorn config"
  task :symlink, :roles => :web do
    run "mkdir -p #{release_path}/config/unicorn/"
    run "ln -nfs #{deploy_to}/#{shared_dir}/config/unicorn/#{rails_env}.rb #{release_path}/config/unicorn/#{rails_env}.rb"
  end
end

namespace :private_yml do
  desc "Make symlink for private.yml"
  task :symlink do
    run "ln -nfs #{shared_path}/config/private.yml #{release_path}/config/private.yml"
  end
end

namespace :redis_yml do
  desc "Make symlink for redis.yml"
  task :symlink do
    run "ln -nfs #{shared_path}/config/redis.yml #{release_path}/config/redis.yml"
  end
end

namespace :seeds do
  desc "Make symlink for seeds directory"
  task :symlink do
    run "mkdir -p #{release_path}/public/seeds/"
    run "ln -nfs #{shared_path}/seeds/ #{release_path}/public/seeds/"
  end
end

namespace :eol_clouds do
  desc "Make symlink for EOL clouds files directory"
  task :symlink do
    run "ln -nfs #{shared_path}/eol_ids_with_articles.txt.gz #{release_path}/public/eol_ids_with_articles.txt.gz"
    run "ln -nfs #{shared_path}/eol_ids_with_articles.md5 #{release_path}/public/eol_ids_with_articles.md5"
  end
end


#for rvm installs, we need to ask rvm to trust the rvmrc

namespace :rvm do
  task :trust_rvmrc do
    run \"rvm rvmrc trust \#\{release_path\}\"
  end
end

after "deploy", "rvm:trust_rvmrc"

after  'deploy:update_code', 'database_yml:symlink','eol_cache:symlink','unicorn:symlink', 'private_yml:symlink', 'redis_yml:symlink', 'blast_binary:symlink', 'eol_list:symlink', 'seeds:symlink', 'eol_clouds:symlink'


role :app, "meow"
role :web, "meow"


#TODO populate from call to chef
role :worker_bee, "meow"
role :worker_bee, "meow"

role :worker_bee, "meow"
role :worker_bee, "meow"
role :worker_bee, "meow"
role :worker_bee, "meow"
role :worker_bee, "meow"
