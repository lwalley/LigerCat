LigerCat ligercat.org

INSTALLATION REQUIREMENTS
=========================

LigerCat is a Ruby on Rails application. The following instructions assume you are familiar with and using Ruby Version Manager (RVM http://beginrescueend.com) and Bundler (http://gembundler.com/).

Additional requirements:
* Git
* MySQL 5.0 +
* RabbitMQ
* Redis


INSTALLATION INSTRUCTIONS
=========================

Clone the LigerCat application code to your machine:

READ ONLY:
$ git clone git://github.com/mbl-cli/LigerCat.git

Or READ/WRITE:
$ git clone git@github.com:mbl-cli/LigerCat.git

Navigate to the root directory of the LigerCat application that you just cloned:
$ cd LigerCat

Assuming you are using RVM you should receive a notice regarding a new .rvmrc file when you enter the root directory of the application:
...RVM has encountered a new or modified .rvmrc file in the current directory...
...Do you wish to trust this .rvmrc file?

Trust the .rvmrc file by entering: y

If the Ruby version required is not yet installed RVM will indicate this with a warning:
WARN: ruby ruby-1.8.7 is not installed

To install Ruby 1.8.7 follow the RVM instructions:
$ rvm install ruby-1.8.7

With Ruby installed you should see a notice indicating which Ruby version and gemset you are using when you navigate to the LigerCat application root directory:
$ cd LigerCat
Using ~/.rvm/gems/ruby-1.8.7-p352 with gemset ligercat


The following instructions assume you are in the root directory (RAILS_ROOT) of the LigerCat application:

Add bundler gem to ligercat gemset:
$ gem install bundler

Check bundler gem is installed in the ligercat gemset:
$ gem list

Add required gems to the ligercat gemset using bundler:
$ bundle install


Create a symbolic link for the Blast Binary (only if required, note that Mac OS X creates the symlink for you automagically):
$ ln -nfs lib/blast_bin/blastcl3-linux lib/blast_bin/blastcl3


Creating and populating the database
------------------------------------
WARNING: The LigerCat database can take up more than 11 GB of hard disk space. Running migrations (populating the database) can take up to an hour or more.

An example of the required MySQL connection settings can be found in RAILS_ROOT/config/database.yml.example. Copy this file and rename it to RAILS_ROOT/config/database.yml. Edit the "login" section of your new RAILS_ROOT/config/database.yml to use your MySQL username, password and host values, ensure that your MySQL user has create and update databases privileges.

Create LigerCat database:
$ rake db:create

Populate the LigerCat database - WARNING: may take more than an hour:
$ rake db:migrate




RUNNING LIGERCAT
================

Development Mode
----------------
From the RAILS_ROOT directory start the Web server, use -p to specify a different port, default is 3000. Use CTRL-C to stop the server:
$ script/server

Open a Web browser and navigate to <http://0.0.0.0:3000>

LigerCat also uses RabbitMQ and Redis to handle background processes for new queries. You will need to install and configure these appropriately - instructions are pending, but if you are familiar with these tools you can get started by adjusting the config files in RAILS_ROOT/config and running start and stop commands for RAILS_ROOT/script/working_client.


Production Mode
---------------
LigerCat cannot be run in a production environment by the method detailed above.

We at the MBL run LigerCat using Apache + Phusion Passenger, although there's nothing stopping you from using Mongrel or Thin behind an Apache or Nginx proxy.

Effectively hosting a Rails application in a production environment is beyond the scope of this document, however we have included a sample Capfile that we use to deploy to Phusion Passenger.


TODO make sure the server's timezone is Eastern 
TODO Update capfile to tell whenever to install crontab